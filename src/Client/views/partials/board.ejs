<script src="https://cdn.geogebra.org/apps/deployggb.js"></script>
<script>
    var _user;
    var _isLocked = true;
    var socket = io();
    var strings = <%-JSON.stringify(strings)%>;

    function setListenerToUpdate() {
        socket.on('update',function(data) {
            var applet = document.ggbApplet;
            if(data !== undefined && data !== null)
                applet.setBase64(data);
        });

        socket.on('lockFromServer',function(user) {
            putUserInControl(user);
        });


        socket.on('releaseFromServer',function(user) {
            releaseUserControl(user);
        });       socket.emit('ready', "ok");
    }


    var parameters = {
        "id":"ggbApplet",
        "width":$(window).width() * 0.8,
        "height": $(window).height() * 0.79,
        "showToolBar":true,
        "borderColor":null,
        "showMenuBar":false,
        "allowStyleBar":true,
        "showAlgebraInput":true,
        "enableLabelDrags":false,
        "enableShiftDragZoom":true,
        "capturingThreshold":null,
        "showToolBarHelp":true,
        "language":"iw",
        "country":"IL",
        "errorDialogsActive":true,
        "showTutorialLink":false,
        "showLogging":false,
        "useBrowserForJS":true,
        "perspective":"AG"};

    var applet = new GGBApplet(parameters, '5.0', 'applet_container');

    window.onload = function() {
        applet.inject('applet_container');
    }

    function ggbOnInit() {
        var board = document.ggbApplet;
        board.registerAddListener("addListener");
//        applet.registerRemoveListener("event");
//        applet.registerRenameListener("event");
//        applet.registerClearListener("event");
//        applet.registerUpdateListener("event");
        setListenerToUpdate();
    }

    function addListener(objName) {
        console.log(objName);
//        var toExport = applet.getBase64();
//        socket.emit('update', toExport);
        //console.log("yakir");
    }


    function putUserInControl(userInControl) {
        if(_user != userInControl)
            $('#btnControl').attr("disabled", true);
        $('#userInControl').html(userInControl + " " + strings.inControl);
    }

    function releaseUserControl(user) {
        $('#btnControl').attr("disabled", false);
        $('#userInControl').html(strings.noOneInControl);
    }

    function lockBoard(lock) {
        if(!lock) { // _user release control
            socket.emit('releaseFromClient', _user);
            releaseUserControl();
            $("#applet_container").addClass("disabledbutton");
            _isLocked = true;
            $("#btnControl").html(strings.takeControl);
        }
        else { // _user take control
            _user = $("#name").val();
            socket.emit('lockFromClient', _user);
            putUserInControl(_user);
            $("#applet_container").removeClass("disabledbutton");
            _isLocked = false;
            $("#btnControl").html(strings.release);
        }
    }

</script>
<div class="toolBar">
    <input id="name" type="text" placeholder="הכנס את שמך">
    <button id="btnControl" type="button" onclick="lockBoard(_isLocked)" class="btn btn-success"><%- strings.takeControl %></button>
    <span id="userInControl" style="width: 10%;" class="alert alert-info"><%- strings.noOneInControl %></span>
</div>
<div id="applet_container" class="disabledbutton"></div>